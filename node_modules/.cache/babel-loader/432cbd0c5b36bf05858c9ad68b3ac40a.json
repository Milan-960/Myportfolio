{"ast":null,"code":"import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.addEventListener('load', ({\n      target\n    }) => {\n      const responseStatus = new EmailJSResponseStatus(target);\n\n      if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n        resolve(responseStatus);\n      } else {\n        reject(responseStatus);\n      }\n    });\n    xhr.addEventListener('error', ({\n      target\n    }) => {\n      reject(new EmailJSResponseStatus(target));\n    });\n    xhr.open('POST', store._origin + url, true);\n    Object.keys(headers).forEach(key => {\n      xhr.setRequestHeader(key, headers[key]);\n    });\n    xhr.send(data);\n  });\n};","map":{"version":3,"sources":["/Users/milansachani/Desktop/Projects/MIlan-Portfolio/DamnGoodDev/node_modules/emailjs-com/es/api/sendPost.js"],"names":["EmailJSResponseStatus","store","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","status","text","open","_origin","Object","keys","forEach","key","setRequestHeader","send"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,iCAAtC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,OAAO,GAAG,EAAtB,KAA6B;AACjD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACAD,IAAAA,GAAG,CAACE,gBAAJ,CAAqB,MAArB,EAA6B,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgB;AACzC,YAAMC,cAAc,GAAG,IAAIb,qBAAJ,CAA0BY,MAA1B,CAAvB;;AACA,UAAIC,cAAc,CAACC,MAAf,KAA0B,GAA1B,IAAiCD,cAAc,CAACE,IAAf,KAAwB,IAA7D,EAAmE;AAC/DR,QAAAA,OAAO,CAACM,cAAD,CAAP;AACH,OAFD,MAGK;AACDL,QAAAA,MAAM,CAACK,cAAD,CAAN;AACH;AACJ,KARD;AASAJ,IAAAA,GAAG,CAACE,gBAAJ,CAAqB,OAArB,EAA8B,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgB;AAC1CJ,MAAAA,MAAM,CAAC,IAAIR,qBAAJ,CAA0BY,MAA1B,CAAD,CAAN;AACH,KAFD;AAGAH,IAAAA,GAAG,CAACO,IAAJ,CAAS,MAAT,EAAiBf,KAAK,CAACgB,OAAN,GAAgBd,GAAjC,EAAsC,IAAtC;AACAe,IAAAA,MAAM,CAACC,IAAP,CAAYd,OAAZ,EAAqBe,OAArB,CAA8BC,GAAD,IAAS;AAClCZ,MAAAA,GAAG,CAACa,gBAAJ,CAAqBD,GAArB,EAA0BhB,OAAO,CAACgB,GAAD,CAAjC;AACH,KAFD;AAGAZ,IAAAA,GAAG,CAACc,IAAJ,CAASnB,IAAT;AACH,GAnBM,CAAP;AAoBH,CArBM","sourcesContent":["import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}