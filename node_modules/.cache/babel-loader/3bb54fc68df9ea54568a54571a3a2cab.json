{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Absorbers = void 0;\n\nconst AbsorberInstance_1 = require(\"./AbsorberInstance\");\n\nconst Utils_1 = require(\"../../Utils\");\n\nconst Absorber_1 = require(\"./Options/Classes/Absorber\");\n\nconst Enums_1 = require(\"./Enums\");\n\nclass Absorbers {\n  constructor(container) {\n    this.container = container;\n    this.array = [];\n    this.absorbers = [];\n    this.interactivityAbsorbers = [];\n    const overridableContainer = container;\n\n    overridableContainer.getAbsorber = idxOrName => idxOrName === undefined || typeof idxOrName === \"number\" ? this.array[idxOrName || 0] : this.array.find(t => t.name === idxOrName);\n\n    overridableContainer.addAbsorber = (options, position) => this.addAbsorber(options, position);\n  }\n\n  init(options) {\n    var _a, _b;\n\n    if (!options) {\n      return;\n    }\n\n    if (options.absorbers) {\n      if (options.absorbers instanceof Array) {\n        this.absorbers = options.absorbers.map(s => {\n          const tmp = new Absorber_1.Absorber();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        if (this.absorbers instanceof Array) {\n          this.absorbers = new Absorber_1.Absorber();\n        }\n\n        this.absorbers.load(options.absorbers);\n      }\n    }\n\n    const interactivityAbsorbers = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n\n    if (interactivityAbsorbers) {\n      if (interactivityAbsorbers instanceof Array) {\n        this.interactivityAbsorbers = interactivityAbsorbers.map(s => {\n          const tmp = new Absorber_1.Absorber();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        if (this.interactivityAbsorbers instanceof Array) {\n          this.interactivityAbsorbers = new Absorber_1.Absorber();\n        }\n\n        this.interactivityAbsorbers.load(interactivityAbsorbers);\n      }\n    }\n\n    if (this.absorbers instanceof Array) {\n      for (const absorberOptions of this.absorbers) {\n        this.addAbsorber(absorberOptions);\n      }\n    } else {\n      this.addAbsorber(this.absorbers);\n    }\n  }\n\n  particleUpdate(particle) {\n    for (const absorber of this.array) {\n      absorber.attract(particle);\n\n      if (particle.destroyed) {\n        break;\n      }\n    }\n  }\n\n  draw(context) {\n    for (const absorber of this.array) {\n      context.save();\n      absorber.draw(context);\n      context.restore();\n    }\n  }\n\n  stop() {\n    this.array = [];\n  }\n\n  resize() {\n    for (const absorber of this.array) {\n      absorber.resize();\n    }\n  }\n\n  handleClickMode(mode) {\n    const container = this.container;\n    const absorberOptions = this.absorbers;\n    const modeAbsorbers = this.interactivityAbsorbers;\n\n    if (mode === Enums_1.AbsorberClickMode.absorber) {\n      let absorbersModeOptions;\n\n      if (modeAbsorbers instanceof Array) {\n        if (modeAbsorbers.length > 0) {\n          absorbersModeOptions = Utils_1.Utils.itemFromArray(modeAbsorbers);\n        }\n      } else {\n        absorbersModeOptions = modeAbsorbers;\n      }\n\n      const absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : absorberOptions instanceof Array ? Utils_1.Utils.itemFromArray(absorberOptions) : absorberOptions;\n      const aPosition = container.interactivity.mouse.clickPosition;\n      this.addAbsorber(absorbersOptions, aPosition);\n    }\n  }\n\n  addAbsorber(options, position) {\n    const absorber = new AbsorberInstance_1.AbsorberInstance(this, this.container, options, position);\n    this.array.push(absorber);\n    return absorber;\n  }\n\n  removeAbsorber(absorber) {\n    const index = this.array.indexOf(absorber);\n\n    if (index >= 0) {\n      this.array.splice(index, 1);\n    }\n  }\n\n}\n\nexports.Absorbers = Absorbers;","map":{"version":3,"sources":["/Users/milansachani/Desktop/Projects/MIlan-Portfolio/DamnGoodDev/React-Portfolio/node_modules/tsparticles/dist/Plugins/Absorbers/Absorbers.js"],"names":["Object","defineProperty","exports","value","Absorbers","AbsorberInstance_1","require","Utils_1","Absorber_1","Enums_1","constructor","container","array","absorbers","interactivityAbsorbers","overridableContainer","getAbsorber","idxOrName","undefined","find","t","name","addAbsorber","options","position","init","_a","_b","Array","map","s","tmp","Absorber","load","interactivity","modes","absorberOptions","particleUpdate","particle","absorber","attract","destroyed","draw","context","save","restore","stop","resize","handleClickMode","mode","modeAbsorbers","AbsorberClickMode","absorbersModeOptions","length","Utils","itemFromArray","absorbersOptions","aPosition","mouse","clickPosition","AbsorberInstance","push","removeAbsorber","index","indexOf","splice"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Absorbers = void 0;\nconst AbsorberInstance_1 = require(\"./AbsorberInstance\");\nconst Utils_1 = require(\"../../Utils\");\nconst Absorber_1 = require(\"./Options/Classes/Absorber\");\nconst Enums_1 = require(\"./Enums\");\nclass Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        const overridableContainer = container;\n        overridableContainer.getAbsorber = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        overridableContainer.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    init(options) {\n        var _a, _b;\n        if (!options) {\n            return;\n        }\n        if (options.absorbers) {\n            if (options.absorbers instanceof Array) {\n                this.absorbers = options.absorbers.map((s) => {\n                    const tmp = new Absorber_1.Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.absorbers instanceof Array) {\n                    this.absorbers = new Absorber_1.Absorber();\n                }\n                this.absorbers.load(options.absorbers);\n            }\n        }\n        const interactivityAbsorbers = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n        if (interactivityAbsorbers) {\n            if (interactivityAbsorbers instanceof Array) {\n                this.interactivityAbsorbers = interactivityAbsorbers.map((s) => {\n                    const tmp = new Absorber_1.Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.interactivityAbsorbers instanceof Array) {\n                    this.interactivityAbsorbers = new Absorber_1.Absorber();\n                }\n                this.interactivityAbsorbers.load(interactivityAbsorbers);\n            }\n        }\n        if (this.absorbers instanceof Array) {\n            for (const absorberOptions of this.absorbers) {\n                this.addAbsorber(absorberOptions);\n            }\n        }\n        else {\n            this.addAbsorber(this.absorbers);\n        }\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            context.save();\n            absorber.draw(context);\n            context.restore();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const absorberOptions = this.absorbers;\n        const modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === Enums_1.AbsorberClickMode.absorber) {\n            let absorbersModeOptions;\n            if (modeAbsorbers instanceof Array) {\n                if (modeAbsorbers.length > 0) {\n                    absorbersModeOptions = Utils_1.Utils.itemFromArray(modeAbsorbers);\n                }\n            }\n            else {\n                absorbersModeOptions = modeAbsorbers;\n            }\n            const absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : (absorberOptions instanceof Array ? Utils_1.Utils.itemFromArray(absorberOptions) : absorberOptions);\n            const aPosition = container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance_1.AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n}\nexports.Absorbers = Absorbers;\n"]},"metadata":{},"sourceType":"script"}