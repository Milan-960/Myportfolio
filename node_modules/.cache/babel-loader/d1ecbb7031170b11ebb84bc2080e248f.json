{"ast":null,"code":"var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Collects all child nodes of an element.\n * \n * @param node the node\n */\n\nexport default function childNodes(node) {\n  return node ? toArray(node.childNodes) : [];\n}","map":{"version":3,"sources":["/Users/milansachani/Desktop/Projects/MIlan-Portfolio/DamnGoodDev/node_modules/dom-helpers/esm/childNodes.js"],"names":["toArray","Function","prototype","bind","call","slice","childNodes","node"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,QAAQ,CAACC,SAAT,CAAmBC,IAAnB,CAAwBC,IAAxB,CAA6BH,QAAQ,CAACC,SAAT,CAAmBE,IAAhD,EAAsD,GAAGC,KAAzD,CAAd;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACvC,SAAOA,IAAI,GAAGP,OAAO,CAACO,IAAI,CAACD,UAAN,CAAV,GAA8B,EAAzC;AACD","sourcesContent":["var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Collects all child nodes of an element.\n * \n * @param node the node\n */\n\nexport default function childNodes(node) {\n  return node ? toArray(node.childNodes) : [];\n}"]},"metadata":{},"sourceType":"module"}