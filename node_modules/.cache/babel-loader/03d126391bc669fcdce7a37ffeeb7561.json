{"ast":null,"code":"import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport format from 'date-fns/format';\nimport parseISO from 'date-fns/parseISO';\nimport getYear from 'date-fns/getYear';\nimport addDays from 'date-fns/addDays';\nimport getDay from 'date-fns/getDay';\nimport getMonth from 'date-fns/getMonth';\nimport isAfter from 'date-fns/isAfter';\nimport isSameYear from 'date-fns/isSameYear';\nimport setDay from 'date-fns/setDay';\nimport subYears from 'date-fns/subYears';\nimport color from 'tinycolor2';\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \".styles_chart__316M8 {\\n  margin-bottom: 1rem;\\n}\\n\\n.styles_calendar__1PAia {\\n  max-width: 100%;\\n  height: auto;\\n  margin-bottom: 0.25rem;\\n  overflow: visible;\\n}\\n\\n.styles_loading__1gKsy {\\n  font-size: 90%;\\n}\\n\\n.styles_title__HcRKb {\\n  margin-bottom: 0.5rem;\\n  padding-bottom: 0.25rem;\\n}\\n\";\nvar styles = {\n  \"chart\": \"styles_chart__316M8\",\n  \"calendar\": \"styles_calendar__1PAia\",\n  \"loading\": \"styles_loading__1gKsy\",\n  \"title\": \"styles_title__HcRKb\"\n};\nstyleInject(css_248z); // GitHub theme\n\nconst DEFAULT_THEME = {\n  background: 'transparent',\n  text: '#000',\n  grade4: '#216e39',\n  grade3: '#30a14e',\n  grade2: '#40c463',\n  grade1: '#9be9a8',\n  grade0: '#ebedf0'\n};\nconst NAMESPACE = 'react-github-calendar';\nconst LINE_HEIGHT = 1.5;\nconst MIN_DISTANCE_MONTH_LABELS = 2;\n\nfunction usePrevious(value) {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n} // Import modules separately to reduce bundle size\n\n\nconst API_URL = 'https://ancient-butterfly.herokuapp.com/v3/';\nconst DATE_FORMAT = 'yyyy-MM-dd';\n\nfunction getContributionsForDate(data, date) {\n  return data.contributions.find(contrib => contrib.date === date);\n}\n\nfunction getBlocksForYear(year, data, lastYear) {\n  const now = new Date();\n  const firstDate = lastYear ? subYears(now, 1) : parseISO(`${year}-01-01`);\n  const lastDate = lastYear ? now : parseISO(`${year}-12-31`);\n  let weekStart = firstDate; // The week starts on Sunday - add days to get to next sunday if neccessary\n\n  if (getDay(firstDate) !== 0) {\n    weekStart = addDays(firstDate, getDay(firstDate));\n  } // Fetch graph data for first row (Sundays)\n\n\n  const firstRowDates = [];\n\n  while (weekStart <= lastDate) {\n    const date = format(weekStart, DATE_FORMAT);\n    firstRowDates.push({\n      date,\n      info: getContributionsForDate(data, date)\n    });\n    weekStart = setDay(weekStart, 7);\n  } // Add the remainig days per week (column for column)\n\n\n  return firstRowDates.map(dateObj => {\n    const dates = [];\n\n    for (let i = 0; i <= 6; i += 1) {\n      const date = format(setDay(parseISO(dateObj.date), i), DATE_FORMAT);\n\n      if (isAfter(parseISO(date), lastDate)) {\n        break;\n      }\n\n      dates.push({\n        date,\n        info: getContributionsForDate(data, date)\n      });\n    }\n\n    return dates;\n  });\n}\n\nfunction getMonthLabels(blocks, lastYear) {\n  const weeks = blocks.slice(0, lastYear ? blocks.length - 1 : blocks.length);\n  let previousMonth = 0; // January\n\n  return weeks.reduce((labels, week, x) => {\n    const firstWeekDay = parseISO(week[0].date);\n    const month = getMonth(firstWeekDay) + 1;\n    const monthChanged = month !== previousMonth;\n    const firstMonthIsDecember = x === 0 && month === 12;\n\n    if (monthChanged && !firstMonthIsDecember) {\n      labels.push({\n        x,\n        label: format(firstWeekDay, 'MMM')\n      });\n      previousMonth = month;\n    }\n\n    return labels;\n  }, []);\n}\n\nfunction getGraphDataForYear(year, data, lastYear) {\n  var _data$years;\n\n  const blocks = getBlocksForYear(year, data, lastYear);\n  const monthLabels = getMonthLabels(blocks, lastYear);\n  const totalCount = (_data$years = data.years[lastYear ? 'lastYear' : year]) !== null && _data$years !== void 0 ? _data$years : 0;\n  return {\n    year,\n    blocks,\n    monthLabels,\n    totalCount\n  };\n}\n\nasync function getGitHubGraphData(options) {\n  const {\n    username,\n    years,\n    lastYear\n  } = options;\n  const data = await (await fetch(`${API_URL}${username}?y=all&y=lastYear`)).json();\n\n  if (!Object.keys(data.years).length) {\n    throw Error('No data available');\n  }\n\n  return years.map(year => {\n    const isCurrentYear = isSameYear(parseISO(String(year)), new Date());\n    return getGraphDataForYear(year, data, isCurrentYear && lastYear);\n  });\n}\n\nfunction createCalendarTheme(baseColor, textColor = 'inherit', emptyCellColor = color('white').darken(8).toHslString(), background = 'transparent') {\n  const base = color(baseColor);\n\n  if (!base.isValid()) {\n    return DEFAULT_THEME;\n  }\n\n  const text = color(textColor).isValid() ? String(color(textColor)) : DEFAULT_THEME.text;\n  return {\n    background,\n    text,\n    grade4: base.setAlpha(0.92).toHslString(),\n    grade3: base.setAlpha(0.76).toHslString(),\n    grade2: base.setAlpha(0.6).toHslString(),\n    grade1: base.setAlpha(0.44).toHslString(),\n    grade0: emptyCellColor\n  };\n}\n\nfunction getClassName(name, extra) {\n  if (extra) {\n    return `${NAMESPACE}__${name} ${extra}`;\n  }\n\n  return `${NAMESPACE}__${name}`;\n}\n\nconst GitHubCalendar = ({\n  username,\n  blockMargin = 2,\n  blockSize = 12,\n  children,\n  color = undefined,\n  dateFormat = 'MMM d, yyyy',\n  fontSize = 14,\n  fullYear = true,\n  showTotalCount = true,\n  style = {},\n  theme = undefined,\n  years = [Number(format(new Date(), 'yyyy'))]\n}) => {\n  const [graphs, setGraphs] = useState(null);\n  const [error, setError] = useState(null);\n  const prevYears = usePrevious(years);\n  const prevUsername = usePrevious(username);\n  const prevFullYear = usePrevious(fullYear);\n  const fetchData = useCallback(() => {\n    setError(null);\n    getGitHubGraphData({\n      years,\n      username,\n      lastYear: fullYear\n    }).then(setGraphs).catch(setError);\n  }, [years, username, fullYear]); // Fetch data on mount\n\n  useEffect(() => {\n    fetchData();\n  }, []); // eslint-disable-line\n  // Refetch if relevant props change\n\n  useEffect(() => {\n    if (prevFullYear !== fullYear || prevUsername !== username || prevYears.some(y => !years.includes(y))) {\n      fetchData();\n    }\n  }, [fetchData, fullYear, prevFullYear, prevUsername, prevYears, username, years]);\n\n  function getTheme() {\n    if (theme) {\n      return Object.assign({}, DEFAULT_THEME, theme);\n    }\n\n    if (color) {\n      return createCalendarTheme(color);\n    }\n\n    return DEFAULT_THEME;\n  }\n\n  function getDimensions() {\n    const textHeight = Math.round(fontSize * LINE_HEIGHT); // Since weeks start on Sunday, there is a good chance that the graph starts\n    // in the week before January 1st. Therefore, the calendar shows 53 weeks.\n\n    const width = (52 + 1) * (blockSize + blockMargin) - blockMargin;\n    const height = textHeight + (blockSize + blockMargin) * 7 - blockMargin;\n    return {\n      width,\n      height\n    };\n  }\n\n  function getTooltipMessage(day) {\n    const date = parseISO(day.date);\n    return `<strong>${day.info.count} contributions</strong> on ${format(date, dateFormat)}`;\n  }\n\n  function renderMonthLabels(monthLabels) {\n    const style = {\n      fill: getTheme().text,\n      fontSize\n    }; // Remove the first month label if there's not enough space to the next one\n    // (end of previous month)\n\n    if (monthLabels[1].x - monthLabels[0].x <= MIN_DISTANCE_MONTH_LABELS) {\n      monthLabels.shift();\n    }\n\n    return monthLabels.map(month => /*#__PURE__*/React.createElement(\"text\", {\n      x: (blockSize + blockMargin) * month.x,\n      y: fontSize,\n      key: month.x,\n      style: style\n    }, month.label));\n  }\n\n  function renderBlocks(blocks) {\n    const theme = getTheme();\n    const textHeight = Math.round(fontSize * LINE_HEIGHT);\n    return blocks.map(week => week.map((day, y) => /*#__PURE__*/React.createElement(\"rect\", {\n      x: \"0\",\n      y: textHeight + (blockSize + blockMargin) * y,\n      width: blockSize,\n      height: blockSize,\n      fill: theme[`grade${day.info ? day.info.level : 0}`],\n      \"data-tip\": day.info ? getTooltipMessage(day) : null,\n      key: day.date\n    }))).map((week, x) => /*#__PURE__*/React.createElement(\"g\", {\n      key: x,\n      transform: `translate(${(blockSize + blockMargin) * x}, 0)`\n    }, week));\n  }\n\n  function renderTotalCount(year, totalCount) {\n    const isCurrentYear = getYear(new Date()) === year;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: getClassName('meta'),\n      style: {\n        fontSize\n      }\n    }, isCurrentYear && fullYear ? 'Last year' : year, ' â€“ ', isCurrentYear && !fullYear ? 'So far ' : null, totalCount, \" contributions\");\n  }\n\n  const {\n    width,\n    height\n  } = getDimensions();\n\n  if (error) {\n    console.error(error);\n    return /*#__PURE__*/React.createElement(\"p\", null, \"Error :(\");\n  }\n\n  if (!graphs) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: getClassName('loading', styles.loading)\n    }, \"Loading \\u2026\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: NAMESPACE,\n    style: style\n  }, graphs.map(graph => {\n    const {\n      year,\n      blocks,\n      monthLabels,\n      totalCount\n    } = graph;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: year,\n      className: getClassName('chart', styles.chart)\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: width,\n      height: height,\n      viewBox: `0 0 ${width} ${height}`,\n      className: getClassName('calendar', styles.calendar),\n      style: {\n        backgroundColor: theme === null || theme === void 0 ? void 0 : theme.background\n      }\n    }, renderMonthLabels(monthLabels), renderBlocks(blocks)), showTotalCount && renderTotalCount(year, totalCount), children);\n  }));\n};\n\nexport default GitHubCalendar;\nexport { createCalendarTheme };","map":{"version":3,"sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/utils/constants.ts","../src/hooks/usePrevious.ts","../src/services/contributions.ts","../src/utils/index.ts","../src/components/GitHubCalendar/index.tsx"],"names":["DEFAULT_THEME","background","text","grade4","grade3","grade2","grade1","grade0","NAMESPACE","LINE_HEIGHT","MIN_DISTANCE_MONTH_LABELS","ref","useRef","useEffect","API_URL","DATE_FORMAT","data","contrib","now","firstDate","lastYear","subYears","parseISO","year","lastDate","weekStart","getDay","addDays","firstRowDates","date","format","info","getContributionsForDate","setDay","dateObj","dates","i","isAfter","weeks","blocks","previousMonth","firstWeekDay","week","month","getMonth","monthChanged","firstMonthIsDecember","x","labels","label","getBlocksForYear","monthLabels","getMonthLabels","totalCount","fetch","username","Object","Error","isCurrentYear","isSameYear","String","getGraphDataForYear","textColor","emptyCellColor","color","base","name","extra","GitHubCalendar","blockMargin","blockSize","dateFormat","fontSize","fullYear","showTotalCount","style","theme","years","Number","useState","prevYears","usePrevious","prevUsername","prevFullYear","fetchData","useCallback","setError","getGitHubGraphData","y","createCalendarTheme","textHeight","Math","width","height","day","count","fill","getTheme","getTooltipMessage","getYear","getClassName","getDimensions","console","styles","graph","backgroundColor","renderMonthLabels","renderBlocks","renderTotalCount"],"mappings":"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","sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// GitHub theme\nexport type Theme = {\n  [key: string]: string;\n  background: string;\n  text: string;\n  grade4: string;\n  grade3: string;\n  grade2: string;\n  grade1: string;\n  grade0: string;\n};\n\nexport const DEFAULT_THEME = {\n  background: 'transparent',\n  text: '#000',\n  grade4: '#216e39',\n  grade3: '#30a14e',\n  grade2: '#40c463',\n  grade1: '#9be9a8',\n  grade0: '#ebedf0',\n};\n\nexport const NAMESPACE = 'react-github-calendar';\n\nexport const LINE_HEIGHT = 1.5;\nexport const MIN_DISTANCE_MONTH_LABELS = 2;\n","import { useRef, useEffect } from 'react';\n\nexport function usePrevious<T>(value: T): T {\n  const ref = useRef<T>(value);\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n","// Import modules separately to reduce bundle size\nimport addDays from 'date-fns/addDays';\nimport format from 'date-fns/format';\nimport getDay from 'date-fns/getDay';\nimport getMonth from 'date-fns/getMonth';\nimport isAfter from 'date-fns/isAfter';\nimport isSameYear from 'date-fns/isSameYear';\nimport parseISO from 'date-fns/parseISO';\nimport setDay from 'date-fns/setDay';\nimport subYears from 'date-fns/subYears';\n\nconst API_URL = 'https://ancient-butterfly.herokuapp.com/v3/';\nconst DATE_FORMAT = 'yyyy-MM-dd';\n\nexport type Block = {\n  date: string;\n  info?: {\n    date: string;\n    count: number;\n    level: number;\n  };\n};\n\ninterface MonthLabel {\n  x: number;\n  label: string;\n}\n\nexport interface GraphData {\n  year: number;\n  blocks: Array<Array<Block>>;\n  monthLabels: Array<MonthLabel>;\n  totalCount: number;\n}\n\nexport interface RequestOptions {\n  username: string;\n  years: Array<number>;\n  lastYear: boolean;\n}\n\ninterface ApiResult {\n  years: {\n    [year: number]: number;\n    [year: string]: number; // lastYear\n  };\n  contributions: Array<{\n    date: string;\n    count: number;\n    level: number;\n  }>;\n}\n\nfunction getContributionsForDate(data: ApiResult, date: string) {\n  return data.contributions.find(contrib => contrib.date === date);\n}\n\nfunction getBlocksForYear(year: number, data: ApiResult, lastYear: boolean) {\n  const now = new Date();\n  const firstDate = lastYear ? subYears(now, 1) : parseISO(`${year}-01-01`);\n  const lastDate = lastYear ? now : parseISO(`${year}-12-31`);\n\n  let weekStart = firstDate;\n\n  // The week starts on Sunday - add days to get to next sunday if neccessary\n  if (getDay(firstDate) !== 0) {\n    weekStart = addDays(firstDate, getDay(firstDate));\n  }\n\n  // Fetch graph data for first row (Sundays)\n  const firstRowDates = [];\n  while (weekStart <= lastDate) {\n    const date = format(weekStart, DATE_FORMAT);\n\n    firstRowDates.push({\n      date,\n      info: getContributionsForDate(data, date),\n    });\n\n    weekStart = setDay(weekStart, 7);\n  }\n\n  // Add the remainig days per week (column for column)\n  return firstRowDates.map(dateObj => {\n    const dates = [];\n    for (let i = 0; i <= 6; i += 1) {\n      const date = format(setDay(parseISO(dateObj.date), i), DATE_FORMAT);\n\n      if (isAfter(parseISO(date), lastDate)) {\n        break;\n      }\n\n      dates.push({\n        date,\n        info: getContributionsForDate(data, date),\n      });\n    }\n\n    return dates;\n  });\n}\n\nfunction getMonthLabels(blocks: GraphData['blocks'], lastYear: boolean): Array<MonthLabel> {\n  const weeks = blocks.slice(0, lastYear ? blocks.length - 1 : blocks.length);\n  let previousMonth = 0; // January\n\n  return weeks.reduce<Array<MonthLabel>>((labels, week, x) => {\n    const firstWeekDay = parseISO(week[0].date);\n    const month = getMonth(firstWeekDay) + 1;\n    const monthChanged = month !== previousMonth;\n    const firstMonthIsDecember = x === 0 && month === 12;\n\n    if (monthChanged && !firstMonthIsDecember) {\n      labels.push({\n        x,\n        label: format(firstWeekDay, 'MMM'),\n      });\n      previousMonth = month;\n    }\n\n    return labels;\n  }, []);\n}\n\nfunction getGraphDataForYear(year: number, data: ApiResult, lastYear: boolean): GraphData {\n  const blocks = getBlocksForYear(year, data, lastYear);\n  const monthLabels = getMonthLabels(blocks, lastYear);\n  const totalCount = data.years[lastYear ? 'lastYear' : year] ?? 0;\n\n  return {\n    year,\n    blocks,\n    monthLabels,\n    totalCount,\n  };\n}\n\nexport async function getGitHubGraphData(options: RequestOptions): Promise<Array<GraphData>> {\n  const { username, years, lastYear } = options;\n  const data: ApiResult = await (await fetch(`${API_URL}${username}?y=all&y=lastYear`)).json();\n\n  if (!Object.keys(data.years).length) {\n    throw Error('No data available');\n  }\n\n  return years.map(year => {\n    const isCurrentYear = isSameYear(parseISO(String(year)), new Date());\n\n    return getGraphDataForYear(year, data, isCurrentYear && lastYear);\n  });\n}\n","import color, { ColorInput } from 'tinycolor2';\n\nimport { DEFAULT_THEME, NAMESPACE, Theme } from './constants';\n\nexport function createCalendarTheme(\n  baseColor: ColorInput,\n  textColor = 'inherit',\n  emptyCellColor = color('white').darken(8).toHslString(),\n  background = 'transparent',\n): Theme {\n  const base = color(baseColor);\n\n  if (!base.isValid()) {\n    return DEFAULT_THEME;\n  }\n\n  const text = color(textColor).isValid() ? String(color(textColor)) : DEFAULT_THEME.text;\n\n  return {\n    background,\n    text,\n    grade4: base.setAlpha(0.92).toHslString(),\n    grade3: base.setAlpha(0.76).toHslString(),\n    grade2: base.setAlpha(0.6).toHslString(),\n    grade1: base.setAlpha(0.44).toHslString(),\n    grade0: emptyCellColor,\n  };\n}\n\nexport function getClassName(name: string, extra?: string): string {\n  if (extra) {\n    return `${NAMESPACE}__${name} ${extra}`;\n  }\n\n  return `${NAMESPACE}__${name}`;\n}\n","import React, { useState, CSSProperties, useEffect, useCallback } from 'react';\nimport format from 'date-fns/format';\nimport parseISO from 'date-fns/parseISO';\nimport getYear from 'date-fns/getYear';\nimport { ColorInput } from 'tinycolor2';\n\nimport styles from './styles.css';\n\nimport {\n  DEFAULT_THEME,\n  LINE_HEIGHT,\n  MIN_DISTANCE_MONTH_LABELS,\n  NAMESPACE,\n  Theme,\n} from '../../utils/constants';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { getGitHubGraphData, GraphData, Block } from '../../services/contributions';\nimport { createCalendarTheme, getClassName } from '../../utils';\n\nexport type Props = {\n  username: string;\n  blockMargin?: number;\n  blockSize?: number;\n  color?: ColorInput;\n  dateFormat?: string;\n  fontSize?: number;\n  fullYear?: boolean;\n  showTotalCount?: boolean;\n  style?: CSSProperties;\n  theme?: Theme;\n  years?: Array<number>;\n};\n\nconst GitHubCalendar: React.FC<Props> = ({\n  username,\n  blockMargin = 2,\n  blockSize = 12,\n  children,\n  color = undefined,\n  dateFormat = 'MMM d, yyyy',\n  fontSize = 14,\n  fullYear = true,\n  showTotalCount = true,\n  style = {},\n  theme = undefined,\n  years = [Number(format(new Date(), 'yyyy'))],\n}) => {\n  const [graphs, setGraphs] = useState<Array<GraphData> | null>(null);\n  const [error, setError] = useState<Error | null>(null);\n\n  const prevYears = usePrevious(years);\n  const prevUsername = usePrevious(username);\n  const prevFullYear = usePrevious(fullYear);\n\n  const fetchData = useCallback(() => {\n    setError(null);\n    getGitHubGraphData({\n      years,\n      username,\n      lastYear: fullYear,\n    })\n      .then(setGraphs)\n      .catch(setError);\n  }, [years, username, fullYear]);\n\n  // Fetch data on mount\n  useEffect(() => {\n    fetchData();\n  }, []); // eslint-disable-line\n\n  // Refetch if relevant props change\n  useEffect(() => {\n    if (\n      prevFullYear !== fullYear ||\n      prevUsername !== username ||\n      prevYears.some(y => !years.includes(y))\n    ) {\n      fetchData();\n    }\n  }, [fetchData, fullYear, prevFullYear, prevUsername, prevYears, username, years]);\n\n  function getTheme(): Theme {\n    if (theme) {\n      return Object.assign({}, DEFAULT_THEME, theme);\n    }\n\n    if (color) {\n      return createCalendarTheme(color);\n    }\n\n    return DEFAULT_THEME;\n  }\n\n  function getDimensions() {\n    const textHeight = Math.round(fontSize * LINE_HEIGHT);\n\n    // Since weeks start on Sunday, there is a good chance that the graph starts\n    // in the week before January 1st. Therefore, the calendar shows 53 weeks.\n    const width = (52 + 1) * (blockSize + blockMargin) - blockMargin;\n    const height = textHeight + (blockSize + blockMargin) * 7 - blockMargin;\n\n    return { width, height };\n  }\n\n  function getTooltipMessage(day: Required<Block>) {\n    const date = parseISO(day.date);\n    return `<strong>${day.info.count} contributions</strong> on ${format(date, dateFormat)}`;\n  }\n\n  function renderMonthLabels(monthLabels: GraphData['monthLabels']) {\n    const style = {\n      fill: getTheme().text,\n      fontSize,\n    };\n\n    // Remove the first month label if there's not enough space to the next one\n    // (end of previous month)\n    if (monthLabels[1].x - monthLabels[0].x <= MIN_DISTANCE_MONTH_LABELS) {\n      monthLabels.shift();\n    }\n\n    return monthLabels.map(month => (\n      <text x={(blockSize + blockMargin) * month.x} y={fontSize} key={month.x} style={style}>\n        {month.label}\n      </text>\n    ));\n  }\n\n  function renderBlocks(blocks: GraphData['blocks']) {\n    const theme = getTheme();\n    const textHeight = Math.round(fontSize * LINE_HEIGHT);\n\n    return blocks\n      .map(week =>\n        week.map((day, y) => (\n          <rect\n            x=\"0\"\n            y={textHeight + (blockSize + blockMargin) * y}\n            width={blockSize}\n            height={blockSize}\n            fill={theme[`grade${day.info ? day.info.level : 0}`]}\n            data-tip={day.info ? getTooltipMessage(day as Required<Block>) : null}\n            key={day.date}\n          />\n        )),\n      )\n      .map((week, x) => (\n        <g key={x} transform={`translate(${(blockSize + blockMargin) * x}, 0)`}>\n          {week}\n        </g>\n      ));\n  }\n\n  function renderTotalCount(year: number, totalCount: number) {\n    const isCurrentYear = getYear(new Date()) === year;\n\n    return (\n      <div className={getClassName('meta')} style={{ fontSize }}>\n        {isCurrentYear && fullYear ? 'Last year' : year}\n        {' â€“ '}\n        {isCurrentYear && !fullYear ? 'So far ' : null}\n        {totalCount} contributions\n      </div>\n    );\n  }\n\n  const { width, height } = getDimensions();\n\n  if (error) {\n    console.error(error);\n    return <p>Error :(</p>;\n  }\n\n  if (!graphs) {\n    return <div className={getClassName('loading', styles.loading)}>Loading â€¦</div>;\n  }\n\n  return (\n    <article className={NAMESPACE} style={style}>\n      {graphs.map(graph => {\n        const { year, blocks, monthLabels, totalCount } = graph;\n\n        return (\n          <div key={year} className={getClassName('chart', styles.chart)}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width={width}\n              height={height}\n              viewBox={`0 0 ${width} ${height}`}\n              className={getClassName('calendar', styles.calendar)}\n              style={{ backgroundColor: theme?.background }}\n            >\n              {renderMonthLabels(monthLabels)}\n              {renderBlocks(blocks)}\n            </svg>\n\n            {showTotalCount && renderTotalCount(year, totalCount)}\n            {children}\n          </div>\n        );\n      })}\n    </article>\n  );\n};\n\nexport default GitHubCalendar;\n"]},"metadata":{},"sourceType":"module"}