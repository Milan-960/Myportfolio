{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorUtils = void 0;\n\nconst Utils_1 = require(\"./Utils\");\n\nconst Constants_1 = require(\"./Constants\");\n\nconst NumberUtils_1 = require(\"./NumberUtils\");\n\nfunction hue2rgb(p, q, t) {\n  let tCalc = t;\n\n  if (tCalc < 0) {\n    tCalc += 1;\n  }\n\n  if (tCalc > 1) {\n    tCalc -= 1;\n  }\n\n  if (tCalc < 1 / 6) {\n    return p + (q - p) * 6 * tCalc;\n  }\n\n  if (tCalc < 1 / 2) {\n    return q;\n  }\n\n  if (tCalc < 2 / 3) {\n    return p + (q - p) * (2 / 3 - tCalc) * 6;\n  }\n\n  return p;\n}\n\nfunction stringToRgba(input) {\n  if (input.startsWith(\"rgb\")) {\n    const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n    const result = regex.exec(input);\n    return result ? {\n      a: result.length > 4 ? parseFloat(result[5]) : 1,\n      b: parseInt(result[3], 10),\n      g: parseInt(result[2], 10),\n      r: parseInt(result[1], 10)\n    } : undefined;\n  } else if (input.startsWith(\"hsl\")) {\n    const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n    const result = regex.exec(input);\n    return result ? ColorUtils.hslaToRgba({\n      a: result.length > 4 ? parseFloat(result[5]) : 1,\n      h: parseInt(result[1], 10),\n      l: parseInt(result[3], 10),\n      s: parseInt(result[2], 10)\n    }) : undefined;\n  } else if (input.startsWith(\"hsv\")) {\n    const regex = /hsva?\\(\\s*(\\d+)Â°\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n    const result = regex.exec(input);\n    return result ? ColorUtils.hsvaToRgba({\n      a: result.length > 4 ? parseFloat(result[5]) : 1,\n      h: parseInt(result[1], 10),\n      s: parseInt(result[2], 10),\n      v: parseInt(result[3], 10)\n    }) : undefined;\n  } else {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i;\n    const hexFixed = input.replace(shorthandRegex, (_m, r, g, b, a) => {\n      return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    });\n    const regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i;\n    const result = regex.exec(hexFixed);\n    return result ? {\n      a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n      b: parseInt(result[3], 16),\n      g: parseInt(result[2], 16),\n      r: parseInt(result[1], 16)\n    } : undefined;\n  }\n}\n\nclass ColorUtils {\n  static colorToRgb(input, index, useIndex = true) {\n    var _a, _b, _c;\n\n    if (input === undefined) {\n      return;\n    }\n\n    const color = typeof input === \"string\" ? {\n      value: input\n    } : input;\n    let res;\n\n    if (typeof color.value === \"string\") {\n      if (color.value === Constants_1.Constants.randomColorValue) {\n        res = ColorUtils.getRandomRgbColor();\n      } else {\n        res = ColorUtils.stringToRgb(color.value);\n      }\n    } else {\n      if (color.value instanceof Array) {\n        const colorSelected = Utils_1.Utils.itemFromArray(color.value, index, useIndex);\n        res = ColorUtils.colorToRgb({\n          value: colorSelected\n        });\n      } else {\n        const colorValue = color.value;\n        const rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n\n        if (rgbColor.r !== undefined) {\n          res = rgbColor;\n        } else {\n          const hslColor = (_b = colorValue.hsl) !== null && _b !== void 0 ? _b : color.value;\n\n          if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            res = ColorUtils.hslToRgb(hslColor);\n          } else {\n            const hsvColor = (_c = colorValue.hsv) !== null && _c !== void 0 ? _c : color.value;\n\n            if (hsvColor.h !== undefined && hsvColor.v !== undefined) {\n              res = ColorUtils.hsvToRgb(hsvColor);\n            }\n          }\n        }\n      }\n    }\n\n    return res;\n  }\n\n  static colorToHsl(color, index, useIndex = true) {\n    const rgb = ColorUtils.colorToRgb(color, index, useIndex);\n    return rgb !== undefined ? ColorUtils.rgbToHsl(rgb) : undefined;\n  }\n\n  static rgbToHsl(color) {\n    const r1 = color.r / 255;\n    const g1 = color.g / 255;\n    const b1 = color.b / 255;\n    const max = Math.max(r1, g1, b1);\n    const min = Math.min(r1, g1, b1);\n    const res = {\n      h: 0,\n      l: (max + min) / 2,\n      s: 0\n    };\n\n    if (max != min) {\n      res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n      res.h = r1 === max ? (g1 - b1) / (max - min) : res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min);\n    }\n\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n\n    if (res.h < 0) {\n      res.h += 360;\n    }\n\n    return res;\n  }\n\n  static stringToAlpha(input) {\n    var _a;\n\n    return (_a = stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n  }\n\n  static stringToRgb(input) {\n    return stringToRgba(input);\n  }\n\n  static hslToRgb(hsl) {\n    const result = {\n      b: 0,\n      g: 0,\n      r: 0\n    };\n    const hslPercent = {\n      h: hsl.h / 360,\n      l: hsl.l / 100,\n      s: hsl.s / 100\n    };\n\n    if (hslPercent.s === 0) {\n      result.b = hslPercent.l;\n      result.g = hslPercent.l;\n      result.r = hslPercent.l;\n    } else {\n      const q = hslPercent.l < 0.5 ? hslPercent.l * (1 + hslPercent.s) : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s;\n      const p = 2 * hslPercent.l - q;\n      result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n      result.g = hue2rgb(p, q, hslPercent.h);\n      result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n  }\n\n  static hslaToRgba(hsla) {\n    const rgbResult = ColorUtils.hslToRgb(hsla);\n    return {\n      a: hsla.a,\n      b: rgbResult.b,\n      g: rgbResult.g,\n      r: rgbResult.r\n    };\n  }\n\n  static hslToHsv(hsl) {\n    const l = hsl.l / 100,\n          sl = hsl.s / 100;\n    const v = l + sl * Math.min(l, 1 - l),\n          sv = !v ? 0 : 2 * (1 - l / v);\n    return {\n      h: hsl.h,\n      s: sv * 100,\n      v: v * 100\n    };\n  }\n\n  static hslaToHsva(hsla) {\n    const hsvResult = ColorUtils.hslToHsv(hsla);\n    return {\n      a: hsla.a,\n      h: hsvResult.h,\n      s: hsvResult.s,\n      v: hsvResult.v\n    };\n  }\n\n  static hsvToHsl(hsv) {\n    const v = hsv.v / 100,\n          sv = hsv.s / 100;\n    const l = v * (1 - sv / 2),\n          sl = l === 0 || l === 1 ? 0 : (v - l) / Math.min(l, 1 - l);\n    return {\n      h: hsv.h,\n      l: l * 100,\n      s: sl * 100\n    };\n  }\n\n  static hsvaToHsla(hsva) {\n    const hslResult = ColorUtils.hsvToHsl(hsva);\n    return {\n      a: hsva.a,\n      h: hslResult.h,\n      l: hslResult.l,\n      s: hslResult.s\n    };\n  }\n\n  static hsvToRgb(hsv) {\n    const result = {\n      b: 0,\n      g: 0,\n      r: 0\n    };\n    const hsvPercent = {\n      h: hsv.h / 60,\n      s: hsv.s / 100,\n      v: hsv.v / 100\n    };\n    const c = hsvPercent.v * hsvPercent.s,\n          x = c * (1 - Math.abs(hsvPercent.h % 2 - 1));\n    let tempRgb;\n\n    if (hsvPercent.h >= 0 && hsvPercent.h <= 1) {\n      tempRgb = {\n        r: c,\n        g: x,\n        b: 0\n      };\n    } else if (hsvPercent.h > 1 && hsvPercent.h <= 2) {\n      tempRgb = {\n        r: x,\n        g: c,\n        b: 0\n      };\n    } else if (hsvPercent.h > 2 && hsvPercent.h <= 3) {\n      tempRgb = {\n        r: 0,\n        g: c,\n        b: x\n      };\n    } else if (hsvPercent.h > 3 && hsvPercent.h <= 4) {\n      tempRgb = {\n        r: 0,\n        g: x,\n        b: c\n      };\n    } else if (hsvPercent.h > 4 && hsvPercent.h <= 5) {\n      tempRgb = {\n        r: x,\n        g: 0,\n        b: c\n      };\n    } else if (hsvPercent.h > 5 && hsvPercent.h <= 6) {\n      tempRgb = {\n        r: c,\n        g: 0,\n        b: x\n      };\n    }\n\n    if (tempRgb) {\n      const m = hsvPercent.v - c;\n      result.r = Math.floor((tempRgb.r + m) * 255);\n      result.g = Math.floor((tempRgb.g + m) * 255);\n      result.b = Math.floor((tempRgb.b + m) * 255);\n    }\n\n    return result;\n  }\n\n  static hsvaToRgba(hsva) {\n    const rgbResult = ColorUtils.hsvToRgb(hsva);\n    return {\n      a: hsva.a,\n      b: rgbResult.b,\n      g: rgbResult.g,\n      r: rgbResult.r\n    };\n  }\n\n  static rgbToHsv(rgb) {\n    const rgbPercent = {\n      r: rgb.r / 255,\n      g: rgb.g / 255,\n      b: rgb.b / 255\n    },\n          xMax = Math.max(rgbPercent.r, rgbPercent.g, rgbPercent.b),\n          xMin = Math.min(rgbPercent.r, rgbPercent.g, rgbPercent.b),\n          v = xMax,\n          c = xMax - xMin;\n    let h = 0;\n\n    if (v === rgbPercent.r) {\n      h = 60 * ((rgbPercent.g - rgbPercent.b) / c);\n    } else if (v === rgbPercent.g) {\n      h = 60 * (2 + (rgbPercent.b - rgbPercent.r) / c);\n    } else if (v === rgbPercent.b) {\n      h = 60 * (4 + (rgbPercent.r - rgbPercent.g) / c);\n    }\n\n    const s = !v ? 0 : c / v;\n    return {\n      h,\n      s: s * 100,\n      v: v * 100\n    };\n  }\n\n  static rgbaToHsva(rgba) {\n    const hsvResult = ColorUtils.rgbToHsv(rgba);\n    return {\n      a: rgba.a,\n      h: hsvResult.h,\n      s: hsvResult.s,\n      v: hsvResult.v\n    };\n  }\n\n  static getRandomRgbColor(min) {\n    const fixedMin = min !== null && min !== void 0 ? min : 0;\n    return {\n      b: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256))),\n      g: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256))),\n      r: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256)))\n    };\n  }\n\n  static getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n  }\n\n  static getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n  }\n\n  static getStyleFromHsv(color, opacity) {\n    return ColorUtils.getStyleFromHsl(ColorUtils.hsvToHsl(color), opacity);\n  }\n\n  static mix(color1, color2, size1, size2) {\n    let rgb1 = color1;\n    let rgb2 = color2;\n\n    if (rgb1.r === undefined) {\n      rgb1 = ColorUtils.hslToRgb(color1);\n    }\n\n    if (rgb2.r === undefined) {\n      rgb2 = ColorUtils.hslToRgb(color2);\n    }\n\n    return {\n      b: NumberUtils_1.NumberUtils.mix(rgb1.b, rgb2.b, size1, size2),\n      g: NumberUtils_1.NumberUtils.mix(rgb1.g, rgb2.g, size1, size2),\n      r: NumberUtils_1.NumberUtils.mix(rgb1.r, rgb2.r, size1, size2)\n    };\n  }\n\n  static replaceColorSvg(imageShape, color, opacity) {\n    const {\n      svgData\n    } = imageShape;\n\n    if (!svgData) {\n      return \"\";\n    }\n\n    if (svgData.includes(\"fill\")) {\n      const currentColor = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\n      return svgData.replace(currentColor, () => ColorUtils.getStyleFromHsl(color, opacity));\n    }\n\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${ColorUtils.getStyleFromHsl(color, opacity)}\"${svgData.substring(preFillIndex)}`;\n  }\n\n  static getLinkColor(p1, p2, linkColor) {\n    var _a, _b;\n\n    if (linkColor === Constants_1.Constants.randomColorValue) {\n      return ColorUtils.getRandomRgbColor();\n    } else if (linkColor === \"mid\") {\n      const sourceColor = (_a = p1.getFillColor()) !== null && _a !== void 0 ? _a : p1.getStrokeColor();\n      const destColor = (_b = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _b !== void 0 ? _b : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n\n      if (sourceColor && destColor && p2) {\n        return ColorUtils.mix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n      } else {\n        const hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n\n        if (hslColor) {\n          return ColorUtils.hslToRgb(hslColor);\n        }\n      }\n    } else {\n      return linkColor;\n    }\n  }\n\n  static getLinkRandomColor(optColor, blink, consent) {\n    const color = typeof optColor === \"string\" ? optColor : optColor.value;\n\n    if (color === Constants_1.Constants.randomColorValue) {\n      if (consent) {\n        return ColorUtils.colorToRgb({\n          value: color\n        });\n      } else if (blink) {\n        return Constants_1.Constants.randomColorValue;\n      } else {\n        return Constants_1.Constants.midColorValue;\n      }\n    } else {\n      return ColorUtils.colorToRgb({\n        value: color\n      });\n    }\n  }\n\n  static getHslFromAnimation(animation) {\n    return animation !== undefined ? {\n      h: animation.h.value,\n      s: animation.s.value,\n      l: animation.l.value\n    } : undefined;\n  }\n\n}\n\nexports.ColorUtils = ColorUtils;","map":{"version":3,"sources":["/Users/milansachani/Desktop/Projects/MIlan-Portfolio/Myportfolio/node_modules/tsparticles/dist/Utils/ColorUtils.js"],"names":["Object","defineProperty","exports","value","ColorUtils","Utils_1","require","Constants_1","NumberUtils_1","hue2rgb","p","q","t","tCalc","stringToRgba","input","startsWith","regex","result","exec","a","length","parseFloat","b","parseInt","g","r","undefined","hslaToRgba","h","l","s","hsvaToRgba","v","shorthandRegex","hexFixed","replace","_m","colorToRgb","index","useIndex","_a","_b","_c","color","res","Constants","randomColorValue","getRandomRgbColor","stringToRgb","Array","colorSelected","Utils","itemFromArray","colorValue","rgbColor","rgb","hslColor","hsl","hslToRgb","hsvColor","hsv","hsvToRgb","colorToHsl","rgbToHsl","r1","g1","b1","max","Math","min","stringToAlpha","hslPercent","floor","hsla","rgbResult","hslToHsv","sl","sv","hslaToHsva","hsvResult","hsvToHsl","hsvaToHsla","hsva","hslResult","hsvPercent","c","x","abs","tempRgb","m","rgbToHsv","rgbPercent","xMax","xMin","rgbaToHsva","rgba","fixedMin","NumberUtils","randomInRange","setRangeValue","getStyleFromRgb","opacity","getStyleFromHsl","getStyleFromHsv","mix","color1","color2","size1","size2","rgb1","rgb2","replaceColorSvg","imageShape","svgData","includes","currentColor","preFillIndex","indexOf","substring","getLinkColor","p1","p2","linkColor","sourceColor","getFillColor","getStrokeColor","destColor","getRadius","getLinkRandomColor","optColor","blink","consent","midColorValue","getHslFromAnimation","animation"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorUtils = void 0;\nconst Utils_1 = require(\"./Utils\");\nconst Constants_1 = require(\"./Constants\");\nconst NumberUtils_1 = require(\"./NumberUtils\");\nfunction hue2rgb(p, q, t) {\n    let tCalc = t;\n    if (tCalc < 0) {\n        tCalc += 1;\n    }\n    if (tCalc > 1) {\n        tCalc -= 1;\n    }\n    if (tCalc < 1 / 6) {\n        return p + (q - p) * 6 * tCalc;\n    }\n    if (tCalc < 1 / 2) {\n        return q;\n    }\n    if (tCalc < 2 / 3) {\n        return p + (q - p) * (2 / 3 - tCalc) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    if (input.startsWith(\"rgb\")) {\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n        const result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseFloat(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n    else if (input.startsWith(\"hsl\")) {\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n        const result = regex.exec(input);\n        return result\n            ? ColorUtils.hslaToRgba({\n                a: result.length > 4 ? parseFloat(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n    else if (input.startsWith(\"hsv\")) {\n        const regex = /hsva?\\(\\s*(\\d+)Â°\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n        const result = regex.exec(input);\n        return result\n            ? ColorUtils.hsvaToRgba({\n                a: result.length > 4 ? parseFloat(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                s: parseInt(result[2], 10),\n                v: parseInt(result[3], 10),\n            })\n            : undefined;\n    }\n    else {\n        const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i;\n        const hexFixed = input.replace(shorthandRegex, (_m, r, g, b, a) => {\n            return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n        });\n        const regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i;\n        const result = regex.exec(hexFixed);\n        return result\n            ? {\n                a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n                b: parseInt(result[3], 16),\n                g: parseInt(result[2], 16),\n                r: parseInt(result[1], 16),\n            }\n            : undefined;\n    }\n}\nclass ColorUtils {\n    static colorToRgb(input, index, useIndex = true) {\n        var _a, _b, _c;\n        if (input === undefined) {\n            return;\n        }\n        const color = typeof input === \"string\" ? { value: input } : input;\n        let res;\n        if (typeof color.value === \"string\") {\n            if (color.value === Constants_1.Constants.randomColorValue) {\n                res = ColorUtils.getRandomRgbColor();\n            }\n            else {\n                res = ColorUtils.stringToRgb(color.value);\n            }\n        }\n        else {\n            if (color.value instanceof Array) {\n                const colorSelected = Utils_1.Utils.itemFromArray(color.value, index, useIndex);\n                res = ColorUtils.colorToRgb({ value: colorSelected });\n            }\n            else {\n                const colorValue = color.value;\n                const rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n                if (rgbColor.r !== undefined) {\n                    res = rgbColor;\n                }\n                else {\n                    const hslColor = (_b = colorValue.hsl) !== null && _b !== void 0 ? _b : color.value;\n                    if (hslColor.h !== undefined && hslColor.l !== undefined) {\n                        res = ColorUtils.hslToRgb(hslColor);\n                    }\n                    else {\n                        const hsvColor = (_c = colorValue.hsv) !== null && _c !== void 0 ? _c : color.value;\n                        if (hsvColor.h !== undefined && hsvColor.v !== undefined) {\n                            res = ColorUtils.hsvToRgb(hsvColor);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    static colorToHsl(color, index, useIndex = true) {\n        const rgb = ColorUtils.colorToRgb(color, index, useIndex);\n        return rgb !== undefined ? ColorUtils.rgbToHsl(rgb) : undefined;\n    }\n    static rgbToHsl(color) {\n        const r1 = color.r / 255;\n        const g1 = color.g / 255;\n        const b1 = color.b / 255;\n        const max = Math.max(r1, g1, b1);\n        const min = Math.min(r1, g1, b1);\n        const res = {\n            h: 0,\n            l: (max + min) / 2,\n            s: 0,\n        };\n        if (max != min) {\n            res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n            res.h =\n                r1 === max\n                    ? (g1 - b1) / (max - min)\n                    : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n        }\n        res.l *= 100;\n        res.s *= 100;\n        res.h *= 60;\n        if (res.h < 0) {\n            res.h += 360;\n        }\n        return res;\n    }\n    static stringToAlpha(input) {\n        var _a;\n        return (_a = stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n    }\n    static stringToRgb(input) {\n        return stringToRgba(input);\n    }\n    static hslToRgb(hsl) {\n        const result = { b: 0, g: 0, r: 0 };\n        const hslPercent = {\n            h: hsl.h / 360,\n            l: hsl.l / 100,\n            s: hsl.s / 100,\n        };\n        if (hslPercent.s === 0) {\n            result.b = hslPercent.l;\n            result.g = hslPercent.l;\n            result.r = hslPercent.l;\n        }\n        else {\n            const q = hslPercent.l < 0.5\n                ? hslPercent.l * (1 + hslPercent.s)\n                : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s;\n            const p = 2 * hslPercent.l - q;\n            result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n            result.g = hue2rgb(p, q, hslPercent.h);\n            result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n        }\n        result.r = Math.floor(result.r * 255);\n        result.g = Math.floor(result.g * 255);\n        result.b = Math.floor(result.b * 255);\n        return result;\n    }\n    static hslaToRgba(hsla) {\n        const rgbResult = ColorUtils.hslToRgb(hsla);\n        return {\n            a: hsla.a,\n            b: rgbResult.b,\n            g: rgbResult.g,\n            r: rgbResult.r,\n        };\n    }\n    static hslToHsv(hsl) {\n        const l = hsl.l / 100, sl = hsl.s / 100;\n        const v = l + sl * Math.min(l, 1 - l), sv = !v ? 0 : 2 * (1 - l / v);\n        return {\n            h: hsl.h,\n            s: sv * 100,\n            v: v * 100,\n        };\n    }\n    static hslaToHsva(hsla) {\n        const hsvResult = ColorUtils.hslToHsv(hsla);\n        return {\n            a: hsla.a,\n            h: hsvResult.h,\n            s: hsvResult.s,\n            v: hsvResult.v,\n        };\n    }\n    static hsvToHsl(hsv) {\n        const v = hsv.v / 100, sv = hsv.s / 100;\n        const l = v * (1 - sv / 2), sl = l === 0 || l === 1 ? 0 : (v - l) / Math.min(l, 1 - l);\n        return {\n            h: hsv.h,\n            l: l * 100,\n            s: sl * 100,\n        };\n    }\n    static hsvaToHsla(hsva) {\n        const hslResult = ColorUtils.hsvToHsl(hsva);\n        return {\n            a: hsva.a,\n            h: hslResult.h,\n            l: hslResult.l,\n            s: hslResult.s,\n        };\n    }\n    static hsvToRgb(hsv) {\n        const result = { b: 0, g: 0, r: 0 };\n        const hsvPercent = {\n            h: hsv.h / 60,\n            s: hsv.s / 100,\n            v: hsv.v / 100,\n        };\n        const c = hsvPercent.v * hsvPercent.s, x = c * (1 - Math.abs((hsvPercent.h % 2) - 1));\n        let tempRgb;\n        if (hsvPercent.h >= 0 && hsvPercent.h <= 1) {\n            tempRgb = {\n                r: c,\n                g: x,\n                b: 0,\n            };\n        }\n        else if (hsvPercent.h > 1 && hsvPercent.h <= 2) {\n            tempRgb = {\n                r: x,\n                g: c,\n                b: 0,\n            };\n        }\n        else if (hsvPercent.h > 2 && hsvPercent.h <= 3) {\n            tempRgb = {\n                r: 0,\n                g: c,\n                b: x,\n            };\n        }\n        else if (hsvPercent.h > 3 && hsvPercent.h <= 4) {\n            tempRgb = {\n                r: 0,\n                g: x,\n                b: c,\n            };\n        }\n        else if (hsvPercent.h > 4 && hsvPercent.h <= 5) {\n            tempRgb = {\n                r: x,\n                g: 0,\n                b: c,\n            };\n        }\n        else if (hsvPercent.h > 5 && hsvPercent.h <= 6) {\n            tempRgb = {\n                r: c,\n                g: 0,\n                b: x,\n            };\n        }\n        if (tempRgb) {\n            const m = hsvPercent.v - c;\n            result.r = Math.floor((tempRgb.r + m) * 255);\n            result.g = Math.floor((tempRgb.g + m) * 255);\n            result.b = Math.floor((tempRgb.b + m) * 255);\n        }\n        return result;\n    }\n    static hsvaToRgba(hsva) {\n        const rgbResult = ColorUtils.hsvToRgb(hsva);\n        return {\n            a: hsva.a,\n            b: rgbResult.b,\n            g: rgbResult.g,\n            r: rgbResult.r,\n        };\n    }\n    static rgbToHsv(rgb) {\n        const rgbPercent = {\n            r: rgb.r / 255,\n            g: rgb.g / 255,\n            b: rgb.b / 255,\n        }, xMax = Math.max(rgbPercent.r, rgbPercent.g, rgbPercent.b), xMin = Math.min(rgbPercent.r, rgbPercent.g, rgbPercent.b), v = xMax, c = xMax - xMin;\n        let h = 0;\n        if (v === rgbPercent.r) {\n            h = 60 * ((rgbPercent.g - rgbPercent.b) / c);\n        }\n        else if (v === rgbPercent.g) {\n            h = 60 * (2 + (rgbPercent.b - rgbPercent.r) / c);\n        }\n        else if (v === rgbPercent.b) {\n            h = 60 * (4 + (rgbPercent.r - rgbPercent.g) / c);\n        }\n        const s = !v ? 0 : c / v;\n        return {\n            h,\n            s: s * 100,\n            v: v * 100,\n        };\n    }\n    static rgbaToHsva(rgba) {\n        const hsvResult = ColorUtils.rgbToHsv(rgba);\n        return {\n            a: rgba.a,\n            h: hsvResult.h,\n            s: hsvResult.s,\n            v: hsvResult.v,\n        };\n    }\n    static getRandomRgbColor(min) {\n        const fixedMin = min !== null && min !== void 0 ? min : 0;\n        return {\n            b: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256))),\n            g: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256))),\n            r: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256))),\n        };\n    }\n    static getStyleFromRgb(color, opacity) {\n        return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n    }\n    static getStyleFromHsl(color, opacity) {\n        return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n    }\n    static getStyleFromHsv(color, opacity) {\n        return ColorUtils.getStyleFromHsl(ColorUtils.hsvToHsl(color), opacity);\n    }\n    static mix(color1, color2, size1, size2) {\n        let rgb1 = color1;\n        let rgb2 = color2;\n        if (rgb1.r === undefined) {\n            rgb1 = ColorUtils.hslToRgb(color1);\n        }\n        if (rgb2.r === undefined) {\n            rgb2 = ColorUtils.hslToRgb(color2);\n        }\n        return {\n            b: NumberUtils_1.NumberUtils.mix(rgb1.b, rgb2.b, size1, size2),\n            g: NumberUtils_1.NumberUtils.mix(rgb1.g, rgb2.g, size1, size2),\n            r: NumberUtils_1.NumberUtils.mix(rgb1.r, rgb2.r, size1, size2),\n        };\n    }\n    static replaceColorSvg(imageShape, color, opacity) {\n        const { svgData } = imageShape;\n        if (!svgData) {\n            return \"\";\n        }\n        if (svgData.includes(\"fill\")) {\n            const currentColor = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\n            return svgData.replace(currentColor, () => ColorUtils.getStyleFromHsl(color, opacity));\n        }\n        const preFillIndex = svgData.indexOf(\">\");\n        return `${svgData.substring(0, preFillIndex)} fill=\"${ColorUtils.getStyleFromHsl(color, opacity)}\"${svgData.substring(preFillIndex)}`;\n    }\n    static getLinkColor(p1, p2, linkColor) {\n        var _a, _b;\n        if (linkColor === Constants_1.Constants.randomColorValue) {\n            return ColorUtils.getRandomRgbColor();\n        }\n        else if (linkColor === \"mid\") {\n            const sourceColor = (_a = p1.getFillColor()) !== null && _a !== void 0 ? _a : p1.getStrokeColor();\n            const destColor = (_b = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _b !== void 0 ? _b : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n            if (sourceColor && destColor && p2) {\n                return ColorUtils.mix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n            }\n            else {\n                const hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n                if (hslColor) {\n                    return ColorUtils.hslToRgb(hslColor);\n                }\n            }\n        }\n        else {\n            return linkColor;\n        }\n    }\n    static getLinkRandomColor(optColor, blink, consent) {\n        const color = typeof optColor === \"string\" ? optColor : optColor.value;\n        if (color === Constants_1.Constants.randomColorValue) {\n            if (consent) {\n                return ColorUtils.colorToRgb({\n                    value: color,\n                });\n            }\n            else if (blink) {\n                return Constants_1.Constants.randomColorValue;\n            }\n            else {\n                return Constants_1.Constants.midColorValue;\n            }\n        }\n        else {\n            return ColorUtils.colorToRgb({\n                value: color,\n            });\n        }\n    }\n    static getHslFromAnimation(animation) {\n        return animation !== undefined\n            ? {\n                h: animation.h.value,\n                s: animation.s.value,\n                l: animation.l.value,\n            }\n            : undefined;\n    }\n}\nexports.ColorUtils = ColorUtils;\n"]},"metadata":{},"sourceType":"script"}