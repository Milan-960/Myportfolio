{"ast":null,"code":"/**\n * A function that merges React refs into one.\n * Supports both functions and ref objects created using createRef() and useRef().\n *\n * Usage:\n * ```jsx\n * <div ref={mergeRefs(ref1, ref2, ref3)} />\n * ```\n *\n * @param {...Array<Function|object>} inputRefs Array of refs\n * @returns {Function} Merged refs\n */\nexport default function mergeRefs() {\n  for (var _len = arguments.length, inputRefs = new Array(_len), _key = 0; _key < _len; _key++) {\n    inputRefs[_key] = arguments[_key];\n  }\n\n  var filteredInputRefs = inputRefs.filter(Boolean);\n\n  if (filteredInputRefs.length <= 1) {\n    return filteredInputRefs[0];\n  }\n\n  return function mergedRefs(ref) {\n    filteredInputRefs.forEach(function (inputRef) {\n      if (typeof inputRef === 'function') {\n        inputRef(ref);\n      } else {\n        // eslint-disable-next-line no-param-reassign\n        inputRef.current = ref;\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/Users/milansachani/Desktop/Projects/MIlan-Portfolio/DamnGoodDev/node_modules/merge-refs/dist/esm/index.js"],"names":["mergeRefs","_len","arguments","length","inputRefs","Array","_key","filteredInputRefs","filter","Boolean","mergedRefs","ref","forEach","inputRef","current"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,SAAT,GAAqB;AAClC,OAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,SAAS,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAAzC,EAA0DK,IAAI,GAAG,CAAtE,EAAyEA,IAAI,GAAGL,IAAhF,EAAsFK,IAAI,EAA1F,EAA8F;AAC5FF,IAAAA,SAAS,CAACE,IAAD,CAAT,GAAkBJ,SAAS,CAACI,IAAD,CAA3B;AACD;;AAED,MAAIC,iBAAiB,GAAGH,SAAS,CAACI,MAAV,CAAiBC,OAAjB,CAAxB;;AAEA,MAAIF,iBAAiB,CAACJ,MAAlB,IAA4B,CAAhC,EAAmC;AACjC,WAAOI,iBAAiB,CAAC,CAAD,CAAxB;AACD;;AAED,SAAO,SAASG,UAAT,CAAoBC,GAApB,EAAyB;AAC9BJ,IAAAA,iBAAiB,CAACK,OAAlB,CAA0B,UAAUC,QAAV,EAAoB;AAC5C,UAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClCA,QAAAA,QAAQ,CAACF,GAAD,CAAR;AACD,OAFD,MAEO;AACL;AACAE,QAAAA,QAAQ,CAACC,OAAT,GAAmBH,GAAnB;AACD;AACF,KAPD;AAQD,GATD;AAUD","sourcesContent":["/**\n * A function that merges React refs into one.\n * Supports both functions and ref objects created using createRef() and useRef().\n *\n * Usage:\n * ```jsx\n * <div ref={mergeRefs(ref1, ref2, ref3)} />\n * ```\n *\n * @param {...Array<Function|object>} inputRefs Array of refs\n * @returns {Function} Merged refs\n */\nexport default function mergeRefs() {\n  for (var _len = arguments.length, inputRefs = new Array(_len), _key = 0; _key < _len; _key++) {\n    inputRefs[_key] = arguments[_key];\n  }\n\n  var filteredInputRefs = inputRefs.filter(Boolean);\n\n  if (filteredInputRefs.length <= 1) {\n    return filteredInputRefs[0];\n  }\n\n  return function mergedRefs(ref) {\n    filteredInputRefs.forEach(function (inputRef) {\n      if (typeof inputRef === 'function') {\n        inputRef(ref);\n      } else {\n        // eslint-disable-next-line no-param-reassign\n        inputRef.current = ref;\n      }\n    });\n  };\n}"]},"metadata":{},"sourceType":"module"}