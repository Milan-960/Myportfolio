{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Retina = void 0;\n\nconst Utils_1 = require(\"../Utils\");\n\nclass Retina {\n  constructor(container) {\n    this.container = container;\n  }\n\n  init() {\n    const container = this.container;\n    const options = container.actualOptions;\n    this.pixelRatio = !options.detectRetina || Utils_1.Utils.isSsr() ? 1 : window.devicePixelRatio;\n    const motionOptions = this.container.actualOptions.motion;\n\n    if (motionOptions && (motionOptions.disable || motionOptions.reduce.value)) {\n      if (Utils_1.Utils.isSsr() || typeof matchMedia === \"undefined\" || !matchMedia) {\n        this.reduceFactor = 1;\n      } else {\n        const mediaQuery = matchMedia(\"(prefers-reduced-motion: reduce)\");\n\n        if (mediaQuery) {\n          this.handleMotionChange(mediaQuery);\n\n          const handleChange = () => {\n            this.handleMotionChange(mediaQuery);\n            container.refresh().catch(() => {});\n          };\n\n          if (mediaQuery.addEventListener !== undefined) {\n            mediaQuery.addEventListener(\"change\", handleChange);\n          } else if (mediaQuery.addListener !== undefined) {\n            mediaQuery.addListener(handleChange);\n          }\n        }\n      }\n    } else {\n      this.reduceFactor = 1;\n    }\n\n    const ratio = this.pixelRatio;\n\n    if (container.canvas.element) {\n      const element = container.canvas.element;\n      container.canvas.size.width = element.offsetWidth * ratio;\n      container.canvas.size.height = element.offsetHeight * ratio;\n    }\n\n    const particles = options.particles;\n    this.linksDistance = particles.links.distance * ratio;\n    this.linksWidth = particles.links.width * ratio;\n    this.sizeAnimationSpeed = particles.size.animation.speed * ratio;\n    const modes = options.interactivity.modes;\n    this.connectModeDistance = modes.connect.distance * ratio;\n    this.connectModeRadius = modes.connect.radius * ratio;\n    this.grabModeDistance = modes.grab.distance * ratio;\n    this.repulseModeDistance = modes.repulse.distance * ratio;\n    this.bounceModeDistance = modes.bounce.distance * ratio;\n    this.attractModeDistance = modes.attract.distance * ratio;\n    this.slowModeRadius = modes.slow.radius * ratio;\n    this.bubbleModeDistance = modes.bubble.distance * ratio;\n\n    if (modes.bubble.size) {\n      this.bubbleModeSize = modes.bubble.size * ratio;\n    }\n  }\n\n  initParticle(particle) {\n    const particlesOptions = particle.options;\n    const ratio = this.pixelRatio;\n    particle.linksDistance = particlesOptions.links.distance * ratio;\n    particle.linksWidth = particlesOptions.links.width * ratio;\n    particle.moveDrift = Utils_1.NumberUtils.getRangeValue(particlesOptions.move.drift) * ratio;\n    particle.moveSpeed = Utils_1.NumberUtils.getRangeValue(particlesOptions.move.speed) * ratio;\n    particle.sizeAnimationSpeed = particlesOptions.size.animation.speed * ratio;\n    particle.maxDistance = particlesOptions.move.distance * ratio;\n  }\n\n  handleMotionChange(mediaQuery) {\n    const options = this.container.actualOptions;\n\n    if (mediaQuery.matches) {\n      const motion = options.motion;\n      this.reduceFactor = motion.disable ? 0 : motion.reduce.value ? 1 / motion.reduce.factor : 1;\n    } else {\n      this.reduceFactor = 1;\n    }\n  }\n\n}\n\nexports.Retina = Retina;","map":{"version":3,"sources":["/Users/milansachani/Desktop/Projects/MIlan-Portfolio/DamnGoodDev/node_modules/tsparticles/dist/Core/Retina.js"],"names":["Object","defineProperty","exports","value","Retina","Utils_1","require","constructor","container","init","options","actualOptions","pixelRatio","detectRetina","Utils","isSsr","window","devicePixelRatio","motionOptions","motion","disable","reduce","matchMedia","reduceFactor","mediaQuery","handleMotionChange","handleChange","refresh","catch","addEventListener","undefined","addListener","ratio","canvas","element","size","width","offsetWidth","height","offsetHeight","particles","linksDistance","links","distance","linksWidth","sizeAnimationSpeed","animation","speed","modes","interactivity","connectModeDistance","connect","connectModeRadius","radius","grabModeDistance","grab","repulseModeDistance","repulse","bounceModeDistance","bounce","attractModeDistance","attract","slowModeRadius","slow","bubbleModeDistance","bubble","bubbleModeSize","initParticle","particle","particlesOptions","moveDrift","NumberUtils","getRangeValue","move","drift","moveSpeed","maxDistance","matches","factor"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Retina = void 0;\nconst Utils_1 = require(\"../Utils\");\nclass Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container;\n        const options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || Utils_1.Utils.isSsr() ? 1 : window.devicePixelRatio;\n        const motionOptions = this.container.actualOptions.motion;\n        if (motionOptions && (motionOptions.disable || motionOptions.reduce.value)) {\n            if (Utils_1.Utils.isSsr() || typeof matchMedia === \"undefined\" || !matchMedia) {\n                this.reduceFactor = 1;\n            }\n            else {\n                const mediaQuery = matchMedia(\"(prefers-reduced-motion: reduce)\");\n                if (mediaQuery) {\n                    this.handleMotionChange(mediaQuery);\n                    const handleChange = () => {\n                        this.handleMotionChange(mediaQuery);\n                        container.refresh().catch(() => {\n                        });\n                    };\n                    if (mediaQuery.addEventListener !== undefined) {\n                        mediaQuery.addEventListener(\"change\", handleChange);\n                    }\n                    else if (mediaQuery.addListener !== undefined) {\n                        mediaQuery.addListener(handleChange);\n                    }\n                }\n            }\n        }\n        else {\n            this.reduceFactor = 1;\n        }\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.linksDistance = particles.links.distance * ratio;\n        this.linksWidth = particles.links.width * ratio;\n        this.sizeAnimationSpeed = particles.size.animation.speed * ratio;\n        const modes = options.interactivity.modes;\n        this.connectModeDistance = modes.connect.distance * ratio;\n        this.connectModeRadius = modes.connect.radius * ratio;\n        this.grabModeDistance = modes.grab.distance * ratio;\n        this.repulseModeDistance = modes.repulse.distance * ratio;\n        this.bounceModeDistance = modes.bounce.distance * ratio;\n        this.attractModeDistance = modes.attract.distance * ratio;\n        this.slowModeRadius = modes.slow.radius * ratio;\n        this.bubbleModeDistance = modes.bubble.distance * ratio;\n        if (modes.bubble.size) {\n            this.bubbleModeSize = modes.bubble.size * ratio;\n        }\n    }\n    initParticle(particle) {\n        const particlesOptions = particle.options;\n        const ratio = this.pixelRatio;\n        particle.linksDistance = particlesOptions.links.distance * ratio;\n        particle.linksWidth = particlesOptions.links.width * ratio;\n        particle.moveDrift = Utils_1.NumberUtils.getRangeValue(particlesOptions.move.drift) * ratio;\n        particle.moveSpeed = Utils_1.NumberUtils.getRangeValue(particlesOptions.move.speed) * ratio;\n        particle.sizeAnimationSpeed = particlesOptions.size.animation.speed * ratio;\n        particle.maxDistance = particlesOptions.move.distance * ratio;\n    }\n    handleMotionChange(mediaQuery) {\n        const options = this.container.actualOptions;\n        if (mediaQuery.matches) {\n            const motion = options.motion;\n            this.reduceFactor = motion.disable ? 0 : motion.reduce.value ? 1 / motion.reduce.factor : 1;\n        }\n        else {\n            this.reduceFactor = 1;\n        }\n    }\n}\nexports.Retina = Retina;\n"]},"metadata":{},"sourceType":"script"}