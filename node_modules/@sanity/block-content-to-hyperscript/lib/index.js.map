{"version":3,"sources":["../src/index.js"],"names":["hyperscript","require","objectAssign","getImageUrl","blocksToNodes","getSerializers","renderNode","serializer","properties","children","props","tag","childNodes","useDashedStyles","defaultSerializers","serializeSpan","blockContentToHyperscript","options","module","exports"],"mappings":";;AAAA,IAAMA,WAAW,GAAGC,OAAO,CAAC,aAAD,CAA3B;;AACA,IAAMC,YAAY,GAAGD,OAAO,CAAC,eAAD,CAA5B;;AACA,IAAME,WAAW,GAAGF,OAAO,CAAC,eAAD,CAA3B;;AACA,IAAMG,aAAa,GAAGH,OAAO,CAAC,iBAAD,CAA7B;;AACA,IAAMI,cAAc,GAAGJ,OAAO,CAAC,eAAD,CAA9B;;AAEA,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAACC,UAAD,EAAaC,UAAb,EAAyBC,QAAzB,EAAsC;AACvD,MAAMC,KAAK,GAAGF,UAAU,IAAI,EAA5B;;AACA,MAAI,OAAOD,UAAP,KAAsB,UAA1B,EAAsC;AACpC,WAAOA,UAAU,CAACL,YAAY,CAAC,EAAD,EAAKQ,KAAL,EAAY;AAACD,MAAAA,QAAQ,EAARA;AAAD,KAAZ,CAAb,CAAjB;AACD;;AAED,MAAME,GAAG,GAAGJ,UAAZ;AACA,MAAMK,UAAU,GAAGF,KAAK,CAACD,QAAN,IAAkBA,QAArC;AACA,SAAOT,WAAW,CAACW,GAAD,EAAMD,KAAN,EAAaE,UAAb,CAAlB;AACD,CATD;;sBAW4CP,cAAc,CAACC,UAAD,EAAa;AAACO,EAAAA,eAAe,EAAE;AAAlB,CAAb,C;IAAnDC,kB,mBAAAA,kB;IAAoBC,a,mBAAAA,a;;AAE3B,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAAC,OAAO,EAAI;AAC3C,SAAOb,aAAa,CAACE,UAAD,EAAaW,OAAb,EAAsBH,kBAAtB,EAA0CC,aAA1C,CAApB;AACD,CAFD,C,CAIA;;;AACAC,yBAAyB,CAACF,kBAA1B,GAA+CA,kBAA/C,C,CAEA;;AACAE,yBAAyB,CAACb,WAA1B,GAAwCA,WAAxC,C,CAEA;;AACAa,yBAAyB,CAACV,UAA1B,GAAuCA,UAAvC;AAEAY,MAAM,CAACC,OAAP,GAAiBH,yBAAjB","sourcesContent":["const hyperscript = require('hyperscript')\nconst objectAssign = require('object-assign')\nconst getImageUrl = require('./getImageUrl')\nconst blocksToNodes = require('./blocksToNodes')\nconst getSerializers = require('./serializers')\n\nconst renderNode = (serializer, properties, children) => {\n  const props = properties || {}\n  if (typeof serializer === 'function') {\n    return serializer(objectAssign({}, props, {children}))\n  }\n\n  const tag = serializer\n  const childNodes = props.children || children\n  return hyperscript(tag, props, childNodes)\n}\n\nconst {defaultSerializers, serializeSpan} = getSerializers(renderNode, {useDashedStyles: true})\n\nconst blockContentToHyperscript = options => {\n  return blocksToNodes(renderNode, options, defaultSerializers, serializeSpan)\n}\n\n// Expose default serializers to the user\nblockContentToHyperscript.defaultSerializers = defaultSerializers\n\n// Expose logic for building image URLs from an image reference/node\nblockContentToHyperscript.getImageUrl = getImageUrl\n\n// Expose node renderer\nblockContentToHyperscript.renderNode = renderNode\n\nmodule.exports = blockContentToHyperscript\n"],"file":"index.js"}