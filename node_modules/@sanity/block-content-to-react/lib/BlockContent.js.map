{"version":3,"sources":["../src/BlockContent.js"],"names":["React","require","PropTypes","internals","serializers","serializeSpan","renderProps","getImageUrl","blocksToNodes","mergeSerializers","renderNode","createElement","SanityBlockContent","props","customSerializers","defaultSerializers","blockProps","Object","assign","blocks","propTypes","className","string","renderContainerOnSingleChild","bool","ignoreUnknownTypes","projectId","dataset","imageOptions","object","shape","types","marks","list","func","listItem","block","span","oneOfType","arrayOf","_type","isRequired","defaultProps","module","exports"],"mappings":";;AAAA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,YAAYD,QAAQ,YAAR,CAAlB;AACA,IAAME,YAAYF,QAAQ,gDAAR,CAAlB;;eACkDA,QAAQ,eAAR,C;IAA3CG,W,YAAAA,W;IAAaC,a,YAAAA,a;IAAeC,W,YAAAA,W;;IAE5BC,W,GAAgDJ,S,CAAhDI,W;IAAaC,a,GAAmCL,S,CAAnCK,a;IAAeC,gB,GAAoBN,S,CAApBM,gB;;AACnC,IAAMC,aAAaV,MAAMW,aAAzB;;AAEA,IAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AACpC,MAAMC,oBAAoBL,iBACxBG,mBAAmBG,kBADK,EAExBF,MAAMT,WAFkB,CAA1B;;AAKA,MAAMY,aAAaC,OAAOC,MAAP,CAAc,EAAd,EAAkBZ,WAAlB,EAA+BO,KAA/B,EAAsC;AACvDT,iBAAaU,iBAD0C;AAEvDK,YAAQN,MAAMM,MAAN,IAAgB;AAF+B,GAAtC,CAAnB;;AAKA,SAAOX,cAAcE,UAAd,EAA0BM,UAA1B,EAAsCZ,WAAtC,EAAmDC,aAAnD,CAAP;AACD,CAZD;;AAcA;AACAO,mBAAmBG,kBAAnB,GAAwCX,WAAxC;;AAEA;AACAQ,mBAAmBL,WAAnB,GAAiCA,WAAjC;;AAEAK,mBAAmBQ,SAAnB,GAA+B;AAC7BC,aAAWnB,UAAUoB,MADQ;AAE7BC,gCAA8BrB,UAAUsB,IAFX;AAG7BC,sBAAoBvB,UAAUsB,IAHD;;AAK7B;AACAE,aAAWxB,UAAUoB,MANQ;AAO7BK,WAASzB,UAAUoB,MAPU;AAQ7BM,gBAAc1B,UAAU2B,MARK;;AAU7BzB,eAAaF,UAAU4B,KAAV,CAAgB;AAC3B;AACAC,WAAO7B,UAAU2B,MAFU;AAG3BG,WAAO9B,UAAU2B,MAHU;;AAK3B;AACAI,UAAM/B,UAAUgC,IANW;AAO3BC,cAAUjC,UAAUgC,IAPO;;AAS3B;AACAE,WAAOlC,UAAUgC,IAVU;AAW3BG,UAAMnC,UAAUgC;AAXW,GAAhB,CAVgB;;AAwB7Bf,UAAQjB,UAAUoC,SAAV,CAAoB,CAC1BpC,UAAUqC,OAAV,CACErC,UAAU4B,KAAV,CAAgB;AACdU,WAAOtC,UAAUoB,MAAV,CAAiBmB;AADV,GAAhB,CADF,CAD0B,EAM1BvC,UAAU4B,KAAV,CAAgB;AACdU,WAAOtC,UAAUoB,MAAV,CAAiBmB;AADV,GAAhB,CAN0B,CAApB,EASLA;AAjC0B,CAA/B;;AAoCA7B,mBAAmB8B,YAAnB,GAAkC;AAChCjB,sBAAoB,IADY;AAEhCF,gCAA8B,KAFE;AAGhCnB,eAAa,EAHmB;AAIhCwB,gBAAc;AAJkB,CAAlC;;AAOAe,OAAOC,OAAP,GAAiBhC,kBAAjB","file":"BlockContent.js","sourcesContent":["const React = require('react')\nconst PropTypes = require('prop-types')\nconst internals = require('@sanity/block-content-to-hyperscript/internals')\nconst {serializers, serializeSpan, renderProps} = require('./targets/dom')\n\nconst {getImageUrl, blocksToNodes, mergeSerializers} = internals\nconst renderNode = React.createElement\n\nconst SanityBlockContent = (props) => {\n  const customSerializers = mergeSerializers(\n    SanityBlockContent.defaultSerializers,\n    props.serializers\n  )\n\n  const blockProps = Object.assign({}, renderProps, props, {\n    serializers: customSerializers,\n    blocks: props.blocks || [],\n  })\n\n  return blocksToNodes(renderNode, blockProps, serializers, serializeSpan)\n}\n\n// Expose default serializers to the user\nSanityBlockContent.defaultSerializers = serializers\n\n// Expose logic for building image URLs from an image reference/node\nSanityBlockContent.getImageUrl = getImageUrl\n\nSanityBlockContent.propTypes = {\n  className: PropTypes.string,\n  renderContainerOnSingleChild: PropTypes.bool,\n  ignoreUnknownTypes: PropTypes.bool,\n\n  // When rendering images, we need project id and dataset, unless images are materialized\n  projectId: PropTypes.string,\n  dataset: PropTypes.string,\n  imageOptions: PropTypes.object,\n\n  serializers: PropTypes.shape({\n    // Common overrides\n    types: PropTypes.object,\n    marks: PropTypes.object,\n\n    // Less common overrides\n    list: PropTypes.func,\n    listItem: PropTypes.func,\n\n    // Low-level serializers\n    block: PropTypes.func,\n    span: PropTypes.func,\n  }),\n\n  blocks: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        _type: PropTypes.string.isRequired,\n      })\n    ),\n    PropTypes.shape({\n      _type: PropTypes.string.isRequired,\n    }),\n  ]).isRequired,\n}\n\nSanityBlockContent.defaultProps = {\n  ignoreUnknownTypes: true,\n  renderContainerOnSingleChild: false,\n  serializers: {},\n  imageOptions: {},\n}\n\nmodule.exports = SanityBlockContent\n"]}